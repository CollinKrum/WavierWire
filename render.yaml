services:
  - type: web
    name: fantasy-helper-api
    env: node
    region: oregon            # change if you prefer: ohio, frankfurt, singapore
    plan: starter             # free | starter | standard | pro
    branch: main
    rootDir: .
    buildCommand: npm install
    startCommand: npm start   # runs server/index.js (from your package.json "start")
    healthCheckPath: /api/health
    autoDeploy: true
    numInstances: 1
    # Optionally pin Node version in your package.json "engines"
    # runtime: node            # (Render auto-detects from env: node)

    envVars:
      # Render injects PORT automatically—Express reads process.env.PORT
      - key: NODE_ENV
        value: production

      # ESPN cookies — paste real values in Dashboard after first deploy,
      # or prefill here (not recommended for public repos).
      - key: SWID
        sync: false           # set in Render UI (looks like {ED477261-...})
      - key: ESPN_S2
        sync: false           # long cookie string

      # Neon Postgres — use the pooler URL with sslmode=require
      - key: DATABASE_URL
        sync: false

    # Optional CORS tightening (keep wide-open by default in code):
    # headers:
    #   response:
    #     - name: Access-Control-Allow-Origin
    #       value: https://your-frontend.vercel.app

    # Preview environments for PRs (inherits env vars you add in the service)
    previews:
      generation: automatic
      envVars:
        - key: NODE_ENV
          value: production
        - key: SWID
          sync: false
        - key: ESPN_S2
          sync: false
        - key: DATABASE_URL
          sync: false
